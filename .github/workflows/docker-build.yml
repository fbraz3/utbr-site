name: Weekly Docker Build

on:
  schedule:
    # Runs every Sunday at 2 AM UTC (weekly build)
    - cron: '0 2 * * 0'
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.github/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # BUILD AND TEST AMD64 IMAGE
    - name: Build UTBR Site Image - amd64
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        tags: |
          fbraz3/utbr-site:latest-amd64

    - name: Test UTBR Site - amd64
      run: |
        # Start container in background
        docker run --name utbr-test-amd64 -p 8080:80 --rm -d --platform=linux/amd64 fbraz3/utbr-site:latest-amd64
        
        # Wait for nginx to start (using your sleep strategy)
        sleep 10
        
        echo "-----------"
        docker logs utbr-test-amd64
        echo "-----------"
        
        # Test HTTP response
        curl -f http://127.0.0.1:8080 > /tmp/response.html || exit 1
        
        # Test health check comment exists
        grep -q "UTBR-SITE-HEALTH-CHECK: Application is functional" /tmp/response.html || exit 1
        
        # Test essential content exists
        grep -q "Unreal Tournament Brasil" /tmp/response.html || exit 1
        grep -q "Downloads" /tmp/response.html || exit 1
        grep -q "Servidores" /tmp/response.html || exit 1
        
        # Cleanup
        docker stop utbr-test-amd64
        
        echo "✅ AMD64 tests passed!"

    # BUILD AND TEST ARM64 IMAGE
    - name: Build UTBR Site Image - arm64
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/arm64
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        tags: |
          fbraz3/utbr-site:latest-arm64

    - name: Test UTBR Site - arm64
      run: |
        # Start container in background
        docker run --name utbr-test-arm64 -p 8081:80 -d --platform=linux/arm64 fbraz3/utbr-site:latest-arm64

        # Wait for nginx to start (using your sleep strategy)
        sleep 10
        
        echo "-----------"
        docker logs utbr-test-arm64
        echo "-----------"
        
        # Test HTTP response
        curl -f http://127.0.0.1:8081 > /tmp/response-arm64.html || exit 1
        
        # Test health check comment exists
        grep -q "UTBR-SITE-HEALTH-CHECK: Application is functional" /tmp/response-arm64.html || exit 1
        
        # Test essential content exists
        grep -q "Unreal Tournament Brasil" /tmp/response-arm64.html || exit 1
        grep -q "Downloads" /tmp/response-arm64.html || exit 1
        grep -q "Servidores" /tmp/response-arm64.html || exit 1
        
        # Cleanup
        docker stop utbr-test-arm64
        
        echo "✅ ARM64 tests passed!"

    # BUILD AND PUSH MULTI-ARCH IMAGE AFTER TESTS PASS
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: fbraz3/utbr-site:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update Docker Hub description
      uses: peter-evans/dockerhub-description@v4
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        repository: fbraz3/utbr-site
        readme-filepath: ./README-EN.md
        short-description: "Official website for the Brazilian Unreal Tournament community (https://utbr.cf) - Static site with game downloads, server listings, and community information"
